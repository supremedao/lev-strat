{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crvUSD",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crvUSDController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFail_Subtract43",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_NumberIs42",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdc",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wstETH",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604081905260078054600160ff199182168117909255600b80549091169091179055610123601e819055620a11ce601f55610b0b602055610da06021556001625e79b760e01b0319909152608452737109709ecfa91a80626ff3989d68f67f5b1dd12d63ffa1864960a4602060405180830381865afa15801562000089573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000af9190620002bb565b602280546001600160a01b0319166001600160a01b0392909216919091179055601f546040516001625e79b760e01b031981526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa15801562000127573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014d9190620002bb565b602380546001600160a01b0319166001600160a01b03929092169190911790556020546040516001625e79b760e01b031981526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa158015620001c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001eb9190620002bb565b602480546001600160a01b0319166001600160a01b03929092169190911781556021546040516001625e79b760e01b031981526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d9163ffa186499101602060405180830381865afa15801562000261573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002879190620002bb565b602580546001600160a01b0319166001600160a01b0392909216919091179055348015620002b457600080fd5b50620002ed565b600060208284031215620002ce57600080fd5b81516001600160a01b0381168114620002e657600080fd5b9392505050565b610f7b80620002fd6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806385226c81116100a2578063a048c7bc11610071578063a048c7bc14610208578063b5508aa914610210578063ba414fa614610218578063e20c9f7114610230578063fa7626d41461023857600080fd5b806385226c81146101d0578063876db121146101e5578063916a17c6146101ed5780639bec8288146101f557600080fd5b80633e413bee116100e95780633e413bee146101855780633e5e3c23146101985780633f7286f4146101a05780634aa07e64146101a857806366d9a9a0146101bb57600080fd5b80630a9254e41461011b5780631ed7831c14610127578063236f6f42146101455780632ade388014610170575b600080fd5b610125602a601d55565b005b61012f610245565b60405161013c9190610c02565b60405180910390f35b602954610158906001600160a01b031681565b6040516001600160a01b03909116815260200161013c565b6101786102a7565b60405161013c9190610c73565b602654610158906001600160a01b031681565b61012f6103e9565b61012f610449565b602754610158906001600160a01b031681565b6101c36104a9565b60405161013c9190610d4e565b6101d861058f565b60405161013c9190610e01565b61012561065f565b6101c361066e565b602854610158906001600160a01b031681565b610125610754565b6101d861076e565b61022061083e565b604051901515815260200161013c565b61012f61096b565b6007546102209060ff1681565b6060601480548060200260200160405190810160405280929190818152602001828054801561029d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161027f575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156103e057600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156103c957838290600052602060002001805461033c90610e6e565b80601f016020809104026020016040519081016040528092919081815260200182805461036890610e6e565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b50505050508152602001906001019061031d565b5050505081525050815260200190600101906102cb565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801561029d576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161027f575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801561029d576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161027f575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156103e05760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561057757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116105395790505b505050505081525050815260200190600101906104cd565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156103e05783829060005260206000200180546105d290610e6e565b80601f01602080910402602001604051908101604052809291908181526020018280546105fe90610e6e565b801561064b5780601f106106205761010080835404028352916020019161064b565b820191906000526020600020905b81548152906001019060200180831161062e57829003601f168201915b5050505050815260200190600101906105b3565b61066c601d54602a6109cb565b565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156103e05760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561073c57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106fe5790505b50505050508152505081526020019060010190610692565b602b601d60008282546107679190610ea8565b9091555050565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156103e05783829060005260206000200180546107b190610e6e565b80601f01602080910402602001604051908101604052809291908181526020018280546107dd90610e6e565b801561082a5780601f106107ff5761010080835404028352916020019161082a565b820191906000526020600020905b81548152906001019060200180831161080d57829003601f168201915b505050505081526020019060010190610792565b600754600090610100900460ff16156108605750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156109665760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916108ee917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610ecf565b60408051601f198184030181529082905261090891610f00565b6000604051808303816000865af19150503d8060008114610945576040519150601f19603f3d011682016040523d82523d6000602084013e61094a565b606091505b50915050808060200190518101906109629190610f1c565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801561029d576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161027f575050505050905090565b808214610af2577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610a3c9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610af2610af6565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610bf15760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610b909291602001610ecf565b60408051601f1981840301815290829052610baa91610f00565b6000604051808303816000865af19150503d8060008114610be7576040519150601f19603f3d011682016040523d82523d6000602084013e610bec565b606091505b505050505b6007805461ff001916610100179055565b6020808252825182820181905260009190848201906040850190845b81811015610c435783516001600160a01b031683529284019291840191600101610c1e565b50909695505050505050565b60005b83811015610c6a578181015183820152602001610c52565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610d4157603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b81811015610d2a57898403605f1901835284518051808652610d0b818e88018f8501610c4f565b958c0195601f01601f1916949094018b019350918a0191600101610ce4565b509197505050938601935090850190600101610c9a565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610df257898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610ddd5783516001600160e01b0319168252928b019260019290920191908b0190610db3565b50978a01979550505091870191600101610d76565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610d4157878503603f1901845281518051808752610e4f818989018a8501610c4f565b601f01601f191695909501860194509285019290850190600101610e28565b600181811c90821680610e8257607f821691505b602082108103610ea257634e487b7160e01b600052602260045260246000fd5b50919050565b81810381811115610ec957634e487b7160e01b600052601160045260246000fd5b92915050565b6001600160e01b0319831681528151600090610ef2816004850160208701610c4f565b919091016004019392505050565b60008251610f12818460208701610c4f565b9190910192915050565b600060208284031215610f2e57600080fd5b81518015158114610f3e57600080fd5b939250505056fea2646970667358221220386de29589afc218c3c7de774740d8cd0035783bacdb11fade61d831b3910dac64736f6c63430008150033",
    "sourceMap": "188:1198:31:-:0;;;;;1572:26:8;;;1594:4;-1:-1:-1;;1572:26:8;;;;;;;;3126:44:11;;;;;;;;;;;328:5:31;301:32;;;;366:7;339:34;;404:5;379:30;;440:5;415:30;;-1:-1:-1;;;;;;476:16:31;;;;160:25:32;476:7:31;;133:18:32;476:16:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;451:41;;;-1:-1:-1;;;;;;451:41:31;-1:-1:-1;;;;;451:41:31;;;;;;;;;;531:7;;523:16;;-1:-1:-1;;;;;;523:16:31;;;;;160:25:32;;;;523:7:31;;;;133:18:32;;523:16:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;498:41;;;-1:-1:-1;;;;;;498:41:31;-1:-1:-1;;;;;498:41:31;;;;;;;;;;576:5;;568:14;;-1:-1:-1;;;;;;568:14:31;;;;;160:25:32;;;;568:7:31;;;;133:18:32;;568:14:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;545:37;;;-1:-1:-1;;;;;;545:37:31;-1:-1:-1;;;;;545:37:31;;;;;;;;;;619:5;;611:14;;-1:-1:-1;;;;;;611:14:31;;;;;160:25:32;;;;611:7:31;;;;133:18:32;611:14:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;588:37;;;-1:-1:-1;;;;;;588:37:31;-1:-1:-1;;;;;588:37:31;;;;;;;;;;188:1198;;;;;;;;;;;;196:290:32;266:6;319:2;307:9;298:7;294:23;290:32;287:52;;;335:1;332;325:12;287:52;361:16;;-1:-1:-1;;;;;406:31:32;;396:42;;386:70;;452:1;449;442:12;386:70;475:5;196:290;-1:-1:-1;;;196:290:32:o;:::-;188:1198:31;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c806385226c81116100a2578063a048c7bc11610071578063a048c7bc14610208578063b5508aa914610210578063ba414fa614610218578063e20c9f7114610230578063fa7626d41461023857600080fd5b806385226c81146101d0578063876db121146101e5578063916a17c6146101ed5780639bec8288146101f557600080fd5b80633e413bee116100e95780633e413bee146101855780633e5e3c23146101985780633f7286f4146101a05780634aa07e64146101a857806366d9a9a0146101bb57600080fd5b80630a9254e41461011b5780631ed7831c14610127578063236f6f42146101455780632ade388014610170575b600080fd5b610125602a601d55565b005b61012f610245565b60405161013c9190610c02565b60405180910390f35b602954610158906001600160a01b031681565b6040516001600160a01b03909116815260200161013c565b6101786102a7565b60405161013c9190610c73565b602654610158906001600160a01b031681565b61012f6103e9565b61012f610449565b602754610158906001600160a01b031681565b6101c36104a9565b60405161013c9190610d4e565b6101d861058f565b60405161013c9190610e01565b61012561065f565b6101c361066e565b602854610158906001600160a01b031681565b610125610754565b6101d861076e565b61022061083e565b604051901515815260200161013c565b61012f61096b565b6007546102209060ff1681565b6060601480548060200260200160405190810160405280929190818152602001828054801561029d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161027f575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156103e057600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156103c957838290600052602060002001805461033c90610e6e565b80601f016020809104026020016040519081016040528092919081815260200182805461036890610e6e565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b50505050508152602001906001019061031d565b5050505081525050815260200190600101906102cb565b50505050905090565b6060601680548060200260200160405190810160405280929190818152602001828054801561029d576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161027f575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801561029d576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161027f575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156103e05760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561057757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116105395790505b505050505081525050815260200190600101906104cd565b60606018805480602002602001604051908101604052809291908181526020016000905b828210156103e05783829060005260206000200180546105d290610e6e565b80601f01602080910402602001604051908101604052809291908181526020018280546105fe90610e6e565b801561064b5780601f106106205761010080835404028352916020019161064b565b820191906000526020600020905b81548152906001019060200180831161062e57829003601f168201915b5050505050815260200190600101906105b3565b61066c601d54602a6109cb565b565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156103e05760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561073c57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106fe5790505b50505050508152505081526020019060010190610692565b602b601d60008282546107679190610ea8565b9091555050565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156103e05783829060005260206000200180546107b190610e6e565b80601f01602080910402602001604051908101604052809291908181526020018280546107dd90610e6e565b801561082a5780601f106107ff5761010080835404028352916020019161082a565b820191906000526020600020905b81548152906001019060200180831161080d57829003601f168201915b505050505081526020019060010190610792565b600754600090610100900460ff16156108605750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156109665760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916108ee917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610ecf565b60408051601f198184030181529082905261090891610f00565b6000604051808303816000865af19150503d8060008114610945576040519150601f19603f3d011682016040523d82523d6000602084013e61094a565b606091505b50915050808060200190518101906109629190610f1c565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801561029d576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161027f575050505050905090565b808214610af2577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610a3c9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610af2610af6565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610bf15760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052610b909291602001610ecf565b60408051601f1981840301815290829052610baa91610f00565b6000604051808303816000865af19150503d8060008114610be7576040519150601f19603f3d011682016040523d82523d6000602084013e610bec565b606091505b505050505b6007805461ff001916610100179055565b6020808252825182820181905260009190848201906040850190845b81811015610c435783516001600160a01b031683529284019291840191600101610c1e565b50909695505050505050565b60005b83811015610c6a578181015183820152602001610c52565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610d4157603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b81811015610d2a57898403605f1901835284518051808652610d0b818e88018f8501610c4f565b958c0195601f01601f1916949094018b019350918a0191600101610ce4565b509197505050938601935090850190600101610c9a565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610df257898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610ddd5783516001600160e01b0319168252928b019260019290920191908b0190610db3565b50978a01979550505091870191600101610d76565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610d4157878503603f1901845281518051808752610e4f818989018a8501610c4f565b601f01601f191695909501860194509285019290850190600101610e28565b600181811c90821680610e8257607f821691505b602082108103610ea257634e487b7160e01b600052602260045260246000fd5b50919050565b81810381811115610ec957634e487b7160e01b600052601160045260246000fd5b92915050565b6001600160e01b0319831681528151600090610ef2816004850160208701610c4f565b919091016004019392505050565b60008251610f12818460208701610c4f565b9190910192915050565b600060208284031215610f2e57600080fd5b81518015158114610f3e57600080fd5b939250505056fea2646970667358221220386de29589afc218c3c7de774740d8cd0035783bacdb11fade61d831b3910dac64736f6c63430008150033",
    "sourceMap": "188:1198:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;749:56;;796:2;783:10;:15;749:56;;;2452:134:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;709:31:31;;;;;-1:-1:-1;;;;;709:31:31;;;;;;-1:-1:-1;;;;;841:32:32;;;823:51;;811:2;796:18;709:31:31;677:203:32;3360:151:14;;;:::i;:::-;;;;;;;:::i;633:18:31:-;;;;;-1:-1:-1;;;;;633:18:31;;;3221:133:14;;;:::i;2922:141::-;;;:::i;657:20:31:-;;;;;-1:-1:-1;;;;;657:20:31;;;2738:178:14;;;:::i;:::-;;;;;;;:::i;2592:140::-;;;:::i;:::-;;;;;;;:::i;1231:75:31:-;;;:::i;3069:146:14:-;;;:::i;683:20:31:-;;;;;-1:-1:-1;;;;;683:20:31;;;1312:71;;;:::i;2157:141:14:-;;;:::i;1819:584:8:-;;;:::i;:::-;;;6022:14:32;;6015:22;5997:41;;5985:2;5970:18;1819:584:8;5857:187:32;2304:142:14;;;:::i;1572:26:8:-;;;;;;;;;2452:134:14;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:14;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:14;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:14;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;2738:178::-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:140;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1231:75:31;1275:24;1284:10;;1296:2;1275:8;:24::i;:::-;1231:75::o;3069:146:14:-;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1312:71:31;1374:2;1360:10;;:16;;;;;;;:::i;:::-;;;;-1:-1:-1;;1312:71:31:o;2157:141:14:-;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:8;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:8;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6838:51:32;;;-1:-1:-1;;;6905:18:32;;;6898:34;2196:43:8;;;;;;;;;6811:18:32;;;2196:43:8;;;-1:-1:-1;;1671:64:8;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:8;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:8:o;2304:142:14:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:14;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;5209:262:8:-;5271:1;5266;:6;5262:203;;5293:41;;;;;8108:2:32;8090:21;;;8147:2;8127:18;;;8120:30;8186:34;8181:2;8166:18;;8159:62;-1:-1:-1;;;8252:2:32;8237:18;;8230:32;8294:3;8279:19;;7906:398;5293:41:8;;;;;;;;5353:31;;;8521:21:32;;;8578:2;8558:18;;;8551:30;-1:-1:-1;;;8612:2:32;8597:18;;8590:40;8697:4;8682:20;;8675:36;;;5353:31:8;;;;;;;8662:3:32;5353:31:8;;;5403;;;8934:21:32;;;8991:2;8971:18;;;8964:30;-1:-1:-1;;;9025:2:32;9010:18;;9003:40;9110:4;9095:20;;9088:36;;;5403:31:8;;;;;;;9075:3:32;5403:31:8;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;2409:432::-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;9337:51:32;;;-1:-1:-1;;;9404:18:32;;;9397:34;;;;2712:4:8;9447:18:32;;;9440:34;2489:11:8;;1671:64;2586:43;;9310:18:32;;2652:67:8;;;-1:-1:-1;;2652:67:8;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:8;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:8;2820:7;:14;;-1:-1:-1;;2820:14:8;;;;;2409:432::o;14:658:32:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:32;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:32;;14:658;-1:-1:-1;;;;;;14:658:32:o;885:250::-;970:1;980:113;994:6;991:1;988:13;980:113;;;1070:11;;;1064:18;1051:11;;;1044:39;1016:2;1009:10;980:113;;;-1:-1:-1;;1127:1:32;1109:16;;1102:27;885:250::o;1140:1899::-;1344:4;1373:2;1413;1402:9;1398:18;1443:2;1432:9;1425:21;1466:6;1501;1495:13;1532:6;1524;1517:22;1570:2;1559:9;1555:18;1548:25;;1632:2;1622:6;1619:1;1615:14;1604:9;1600:30;1596:39;1582:53;;1670:2;1662:6;1658:15;1691:1;1701:1309;1715:6;1712:1;1709:13;1701:1309;;;-1:-1:-1;;1780:22:32;;;1776:36;1764:49;;1836:13;;1923:9;;-1:-1:-1;;;;;1919:35:32;1904:51;;1994:11;;1988:18;1888:2;2026:15;;;2019:27;;;2107:19;;1876:15;;;2139:24;;;2319:21;;;;2186:2;2272:1;2268:16;;;2256:29;;2252:38;;;2210:15;;;;2364:1;2378:523;2394:8;2389:3;2386:17;2378:523;;;2475:19;;;-1:-1:-1;;2471:33:32;2457:48;;2532:15;;2580:9;;2606:24;;;2647:74;2580:9;2695:15;;;2682:11;;;2647:74;:::i;:::-;2830:17;;;;2791:2;2768:17;-1:-1:-1;;2764:31:32;2752:44;;;;2748:53;;;-1:-1:-1;2873:14:32;;;;2422:1;2413:11;2378:523;;;-1:-1:-1;2924:6:32;;-1:-1:-1;;;2988:12:32;;;;-1:-1:-1;2953:15:32;;;;1737:1;1730:9;1701:1309;;;-1:-1:-1;3027:6:32;;1140:1899;-1:-1:-1;;;;;;;1140:1899:32:o;3266:1567::-;3468:4;3497:2;3537;3526:9;3522:18;3567:2;3556:9;3549:21;3590:6;3625;3619:13;3656:6;3648;3641:22;3682:2;3672:12;;3715:2;3704:9;3700:18;3693:25;;3777:2;3767:6;3764:1;3760:14;3749:9;3745:30;3741:39;3815:2;3807:6;3803:15;3836:1;3857;3867:937;3883:6;3878:3;3875:15;3867:937;;;3952:22;;;-1:-1:-1;;3948:36:32;3936:49;;4008:13;;4095:9;;-1:-1:-1;;;;;4091:35:32;4076:51;;4166:11;;4160:18;4198:15;;;4191:27;;;4279:19;;4048:15;;;4311:24;;;4401:21;;;;4446:1;;4369:2;4357:15;;;4460:236;4476:8;4471:3;4468:17;4460:236;;;4557:15;;-1:-1:-1;;;;;;4553:42:32;4539:57;;4665:17;;;;4504:1;4495:11;;;;;4622:14;;;;4460:236;;;-1:-1:-1;4782:12:32;;;;4719:5;-1:-1:-1;;;4747:15:32;;;;3909:1;3900:11;3867:937;;;-1:-1:-1;4821:6:32;;3266:1567;-1:-1:-1;;;;;;;;;3266:1567:32:o;4838:1014::-;5000:4;5029:2;5069;5058:9;5054:18;5099:2;5088:9;5081:21;5122:6;5157;5151:13;5188:6;5180;5173:22;5226:2;5215:9;5211:18;5204:25;;5288:2;5278:6;5275:1;5271:14;5260:9;5256:30;5252:39;5238:53;;5326:2;5318:6;5314:15;5347:1;5357:466;5371:6;5368:1;5365:13;5357:466;;;5436:22;;;-1:-1:-1;;5432:36:32;5420:49;;5492:13;;5534:9;;5556:24;;;5593:74;5534:9;5641:15;;;5628:11;;;5593:74;:::i;:::-;5733:2;5710:17;-1:-1:-1;;5706:31:32;5694:44;;;;5690:53;;;-1:-1:-1;5801:12:32;;;;5766:15;;;;5393:1;5386:9;5357:466;;6049:380;6128:1;6124:12;;;;6171;;;6192:61;;6246:4;6238:6;6234:17;6224:27;;6192:61;6299:2;6291:6;6288:14;6268:18;6265:38;6262:161;;6345:10;6340:3;6336:20;6333:1;6326:31;6380:4;6377:1;6370:15;6408:4;6405:1;6398:15;6262:161;;6049:380;;;:::o;6434:225::-;6501:9;;;6522:11;;;6519:134;;;6575:10;6570:3;6566:20;6563:1;6556:31;6610:4;6607:1;6600:15;6638:4;6635:1;6628:15;6519:134;6434:225;;;;:::o;6943:384::-;-1:-1:-1;;;;;;7128:33:32;;7116:46;;7185:13;;7098:3;;7207:74;7185:13;7270:1;7261:11;;7254:4;7242:17;;7207:74;:::i;:::-;7301:16;;;;7319:1;7297:24;;6943:384;-1:-1:-1;;;6943:384:32:o;7332:287::-;7461:3;7499:6;7493:13;7515:66;7574:6;7569:3;7562:4;7554:6;7550:17;7515:66;:::i;:::-;7597:16;;;;;7332:287;-1:-1:-1;;7332:287:32:o;7624:277::-;7691:6;7744:2;7732:9;7723:7;7719:23;7715:32;7712:52;;;7760:1;7757;7750:12;7712:52;7792:9;7786:16;7845:5;7838:13;7831:21;7824:5;7821:32;7811:60;;7867:1;7864;7857:12;7811:60;7890:5;7624:277;-1:-1:-1;;;7624:277:32:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "crvUSD()": "9bec8288",
    "crvUSDController()": "236f6f42",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testFail_Subtract43()": "a048c7bc",
    "test_NumberIs42()": "876db121",
    "usdc()": "3e413bee",
    "wstETH()": "4aa07e64"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crvUSD\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crvUSDController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFail_Subtract43\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_NumberIs42\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wstETH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/utils/BaseLeverageStrategyTest.sol.sol\":\"BaseLeverageStrategyTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/LeverageStrategy.sol\":{\"keccak256\":\"0x9dfb54ed530c119456c2d79aa60b3fff7e4d8521b84bba9c4963a0927d3de3a5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c13cbbab60606920c8f71dda38d1e81ebec8183dffbfd7ae975652d3a421052f\",\"dweb:/ipfs/QmP5q2zteHYdma9erRocFHaazEkejhNgCmUSNLEp2qDmDs\"]},\"contracts/interfaces/IAsset.sol\":{\"keccak256\":\"0x03a924155a451b978afb5b571f4a04637ec381a116da825567dd5c92312a678f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://69a7d8a5555fc9fcd7ff9884ce958a401bbc1ecfa290f0340f7755cd7cb42037\",\"dweb:/ipfs/Qmdp7xgbPQoTRoQ5J1QZLfWFfAWwTi1BEe95ac5CNrWZxp\"]},\"contracts/interfaces/IAuraBooster.sol\":{\"keccak256\":\"0xa026d8fd53f8c47a509e1cce5bc7f312afdf7f9736ae31c7c3170943619dd5e2\",\"urls\":[\"bzz-raw://231b6c5077e207b91a5d59e7c672caed65559f298709285fbaaae7bead6a88c3\",\"dweb:/ipfs/QmXcYyfrqvL4AXhRgFB1tCGk47y5vJL1zVayAxuPpiPWuw\"]},\"contracts/interfaces/IBalancerVault.sol\":{\"keccak256\":\"0x9ea80003fff661c593765fd6ba30787028fd130aad6c83f9a68b5f22b4627c8f\",\"urls\":[\"bzz-raw://1ca91dbae5ec22cd41c91c981156c87812fd776b8dc0def5a439792942890945\",\"dweb:/ipfs/QmW4yDh7Wrq7G5V6qpTVZh4Xke7dJ67YrJzff8NbyiK6XY\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xf8e7a4c9356262711c75db38bc8552db1b4095c5f394dd638b4761503cf84b5a\",\"urls\":[\"bzz-raw://53826e23c0d3adcac8a267aeec71ab0d392d3160ca9b182b82cc01d8579435fc\",\"dweb:/ipfs/QmXCLKhhwTBbXuVbYXA3YdpRtPw7NkcD3Gfpvg4CHucYFW\"]},\"contracts/interfaces/IcrvUSD.sol\":{\"keccak256\":\"0x1030a3ec10625ca706d4317918d8ccfa3654ab1ae42fd7be471a4d18f757dc47\",\"urls\":[\"bzz-raw://dd24a4e055f0b8596b9ff7f933426c69b7f98406f64f61b2ab04ec4293fb1ad9\",\"dweb:/ipfs/QmVc4g12uVhxjcXrpjP2Vnqs6SWbV23heoXTR21qFE7TYi\"]},\"contracts/interfaces/IcrvUSDController.sol\":{\"keccak256\":\"0x7471ecf12269d8a61701060fa92e9d3bd4c7ad511b20e7c891fe09dd56d1d0c6\",\"urls\":[\"bzz-raw://5df08d95cabe6d2fcd4303efcc584af7b26a30ea1ebc8f457dbf0a6912a77a06\",\"dweb:/ipfs/QmPRUU6SxjvnmSaQx97EwY4Di9aBKW7Z629kX2ZXDjgqx3\"]},\"contracts/interfaces/IcrvUSDUSDCPool.sol\":{\"keccak256\":\"0xf4b7d27ebbf8f0599ac04c47d6c27fa23b6a6498b3cc63052f8881b328ea5261\",\"urls\":[\"bzz-raw://ca3d527415930e2666a8e8c6c4fb9e28a92e19362ca5e0f7124f68244630f785\",\"dweb:/ipfs/QmYGy2dT4p1kSP11UAoteSAfK2wF3QEgdJ8zgE92ZPy4Ls\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e\",\"dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155\",\"dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"test/utils/BaseLeverageStrategyTest.sol.sol\":{\"keccak256\":\"0x3dd0dcb4d044f1c90e756841c1a735e3714728eb87171479871e4d524bc9d17e\",\"urls\":[\"bzz-raw://9702f884bc7dc2c3822612ce0c2e6f24d87b8182a9050f9aa8158d9cc4ba7f5c\",\"dweb:/ipfs/QmQ3j5kUnFfd3J6p6MhQEdWLP2FP4AzDRPTFDkR2tdZobr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "crvUSD",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "crvUSDController",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFail_Subtract43"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_NumberIs42"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "usdc",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wstETH",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=node_modules/hardhat/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/utils/BaseLeverageStrategyTest.sol.sol": "BaseLeverageStrategyTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/LeverageStrategy.sol": {
        "keccak256": "0x9dfb54ed530c119456c2d79aa60b3fff7e4d8521b84bba9c4963a0927d3de3a5",
        "urls": [
          "bzz-raw://c13cbbab60606920c8f71dda38d1e81ebec8183dffbfd7ae975652d3a421052f",
          "dweb:/ipfs/QmP5q2zteHYdma9erRocFHaazEkejhNgCmUSNLEp2qDmDs"
        ],
        "license": "GPL-3.0-or-later"
      },
      "contracts/interfaces/IAsset.sol": {
        "keccak256": "0x03a924155a451b978afb5b571f4a04637ec381a116da825567dd5c92312a678f",
        "urls": [
          "bzz-raw://69a7d8a5555fc9fcd7ff9884ce958a401bbc1ecfa290f0340f7755cd7cb42037",
          "dweb:/ipfs/Qmdp7xgbPQoTRoQ5J1QZLfWFfAWwTi1BEe95ac5CNrWZxp"
        ],
        "license": "GPL-3.0-or-later"
      },
      "contracts/interfaces/IAuraBooster.sol": {
        "keccak256": "0xa026d8fd53f8c47a509e1cce5bc7f312afdf7f9736ae31c7c3170943619dd5e2",
        "urls": [
          "bzz-raw://231b6c5077e207b91a5d59e7c672caed65559f298709285fbaaae7bead6a88c3",
          "dweb:/ipfs/QmXcYyfrqvL4AXhRgFB1tCGk47y5vJL1zVayAxuPpiPWuw"
        ],
        "license": null
      },
      "contracts/interfaces/IBalancerVault.sol": {
        "keccak256": "0x9ea80003fff661c593765fd6ba30787028fd130aad6c83f9a68b5f22b4627c8f",
        "urls": [
          "bzz-raw://1ca91dbae5ec22cd41c91c981156c87812fd776b8dc0def5a439792942890945",
          "dweb:/ipfs/QmW4yDh7Wrq7G5V6qpTVZh4Xke7dJ67YrJzff8NbyiK6XY"
        ],
        "license": null
      },
      "contracts/interfaces/IERC20.sol": {
        "keccak256": "0xf8e7a4c9356262711c75db38bc8552db1b4095c5f394dd638b4761503cf84b5a",
        "urls": [
          "bzz-raw://53826e23c0d3adcac8a267aeec71ab0d392d3160ca9b182b82cc01d8579435fc",
          "dweb:/ipfs/QmXCLKhhwTBbXuVbYXA3YdpRtPw7NkcD3Gfpvg4CHucYFW"
        ],
        "license": null
      },
      "contracts/interfaces/IcrvUSD.sol": {
        "keccak256": "0x1030a3ec10625ca706d4317918d8ccfa3654ab1ae42fd7be471a4d18f757dc47",
        "urls": [
          "bzz-raw://dd24a4e055f0b8596b9ff7f933426c69b7f98406f64f61b2ab04ec4293fb1ad9",
          "dweb:/ipfs/QmVc4g12uVhxjcXrpjP2Vnqs6SWbV23heoXTR21qFE7TYi"
        ],
        "license": null
      },
      "contracts/interfaces/IcrvUSDController.sol": {
        "keccak256": "0x7471ecf12269d8a61701060fa92e9d3bd4c7ad511b20e7c891fe09dd56d1d0c6",
        "urls": [
          "bzz-raw://5df08d95cabe6d2fcd4303efcc584af7b26a30ea1ebc8f457dbf0a6912a77a06",
          "dweb:/ipfs/QmPRUU6SxjvnmSaQx97EwY4Di9aBKW7Z629kX2ZXDjgqx3"
        ],
        "license": null
      },
      "contracts/interfaces/IcrvUSDUSDCPool.sol": {
        "keccak256": "0xf4b7d27ebbf8f0599ac04c47d6c27fa23b6a6498b3cc63052f8881b328ea5261",
        "urls": [
          "bzz-raw://ca3d527415930e2666a8e8c6c4fb9e28a92e19362ca5e0f7124f68244630f785",
          "dweb:/ipfs/QmYGy2dT4p1kSP11UAoteSAfK2wF3QEgdJ8zgE92ZPy4Ls"
        ],
        "license": null
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8f914dbd016bd0e318fe2b8bd556fbc8256c7cddc24e3e4fcb9f3c1c1935592d",
        "urls": [
          "bzz-raw://19e704df493dde38323303b07d18cadfeb4dcadf1ddc2301add4aea9474fbb5e",
          "dweb:/ipfs/QmZasuGiLK8LHwWtvpqEBxUR6QFY6GdzLMTJ9q7CMf8PNZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x039a59e16791fb3595615f1ad19d614cdb1f1e567ed3bfc1a35d97177387be68",
        "urls": [
          "bzz-raw://da3d0bfe99104664a3a053665578ad1277ea79e0704519d3b7ff98b3b7054155",
          "dweb:/ipfs/QmesLHpsvzvC6DoTFLdgNibRU5sfeNggYtyaRfA64t2PsD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308",
        "urls": [
          "bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80",
          "dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
        "urls": [
          "bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
          "dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
        "urls": [
          "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
          "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "test/utils/BaseLeverageStrategyTest.sol.sol": {
        "keccak256": "0x3dd0dcb4d044f1c90e756841c1a735e3714728eb87171479871e4d524bc9d17e",
        "urls": [
          "bzz-raw://9702f884bc7dc2c3822612ce0c2e6f24d87b8182a9050f9aa8158d9cc4ba7f5c",
          "dweb:/ipfs/QmQ3j5kUnFfd3J6p6MhQEdWLP2FP4AzDRPTFDkR2tdZobr"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/utils/BaseLeverageStrategyTest.sol.sol",
    "id": 44985,
    "exportedSymbols": {
      "BaseLeverageStrategyTest": [
        44984
      ],
      "DSTest": [
        3349
      ],
      "IERC20": [
        707
      ],
      "LeverageStrategy": [
        502
      ],
      "StdAssertions": [
        4842
      ],
      "StdChains": [
        5580
      ],
      "StdCheats": [
        8433
      ],
      "StdInvariant": [
        8758
      ],
      "StdStorage": [
        9524
      ],
      "StdStyle": [
        12374
      ],
      "StdUtils": [
        13222
      ],
      "Test": [
        13273
      ],
      "TestBase": [
        3415
      ],
      "Vm": [
        14979
      ],
      "console": [
        23043
      ],
      "console2": [
        31168
      ],
      "safeconsole": [
        44406
      ],
      "stdError": [
        8499
      ],
      "stdJson": [
        9350
      ],
      "stdMath": [
        9492
      ],
      "stdStorage": [
        11163
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1386:31",
    "nodes": [
      {
        "id": 44845,
        "nodeType": "PragmaDirective",
        "src": "0:23:31",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 44846,
        "nodeType": "ImportDirective",
        "src": "25:28:31",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44985,
        "sourceUnit": 13274,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44848,
        "nodeType": "ImportDirective",
        "src": "54:70:31",
        "nodes": [],
        "absolutePath": "contracts/LeverageStrategy.sol",
        "file": "../../contracts/LeverageStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44985,
        "sourceUnit": 503,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44847,
              "name": "LeverageStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 502,
              "src": "62:16:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44850,
        "nodeType": "ImportDirective",
        "src": "125:61:31",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IERC20.sol",
        "file": "../../contracts/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44985,
        "sourceUnit": 708,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44849,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 707,
              "src": "133:6:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44984,
        "nodeType": "ContractDefinition",
        "src": "188:1198:31",
        "nodes": [
          {
            "id": 44855,
            "nodeType": "VariableDeclaration",
            "src": "236:34:31",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "levStrat",
            "nameLocation": "262:8:31",
            "scope": 44984,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LeverageStrategy_$502",
              "typeString": "contract LeverageStrategy"
            },
            "typeName": {
              "id": 44854,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44853,
                "name": "LeverageStrategy",
                "nameLocations": [
                  "236:16:31"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 502,
                "src": "236:16:31"
              },
              "referencedDeclaration": 502,
              "src": "236:16:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LeverageStrategy_$502",
                "typeString": "contract LeverageStrategy"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44857,
            "nodeType": "VariableDeclaration",
            "src": "276:18:31",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "testNumber",
            "nameLocation": "284:10:31",
            "scope": 44984,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44856,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44860,
            "nodeType": "VariableDeclaration",
            "src": "301:32:31",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ownerPk",
            "nameLocation": "318:7:31",
            "scope": 44984,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44858,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "301:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3078313233",
              "id": 44859,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "328:5:31",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_291_by_1",
                "typeString": "int_const 291"
              },
              "value": "0x123"
            },
            "visibility": "internal"
          },
          {
            "id": 44863,
            "nodeType": "VariableDeclaration",
            "src": "339:34:31",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alicePk",
            "nameLocation": "356:7:31",
            "scope": 44984,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44861,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "339:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30786131316365",
              "id": 44862,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "366:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_659918_by_1",
                "typeString": "int_const 659918"
              },
              "value": "0xa11ce"
            },
            "visibility": "internal"
          },
          {
            "id": 44866,
            "nodeType": "VariableDeclaration",
            "src": "379:30:31",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bobPk",
            "nameLocation": "396:5:31",
            "scope": 44984,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44864,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "379:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3078623062",
              "id": 44865,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "404:5:31",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2827_by_1",
                "typeString": "int_const 2827"
              },
              "value": "0xb0b"
            },
            "visibility": "internal"
          },
          {
            "id": 44869,
            "nodeType": "VariableDeclaration",
            "src": "415:30:31",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "daoPk",
            "nameLocation": "432:5:31",
            "scope": 44984,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 44867,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "415:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3078446130",
              "id": 44868,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "440:5:31",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3488_by_1",
                "typeString": "int_const 3488"
              },
              "value": "0xDa0"
            },
            "visibility": "internal"
          },
          {
            "id": 44875,
            "nodeType": "VariableDeclaration",
            "src": "451:41:31",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "468:5:31",
            "scope": 44984,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44870,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "451:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 44873,
                  "name": "ownerPk",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 44860,
                  "src": "484:7:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "expression": {
                  "id": 44871,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3408,
                  "src": "476:2:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$14979",
                    "typeString": "contract Vm"
                  }
                },
                "id": 44872,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "479:4:31",
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 13344,
                "src": "476:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 44874,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "476:16:31",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44881,
            "nodeType": "VariableDeclaration",
            "src": "498:41:31",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "515:5:31",
            "scope": 44984,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44876,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "498:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 44879,
                  "name": "alicePk",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 44863,
                  "src": "531:7:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "expression": {
                  "id": 44877,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3408,
                  "src": "523:2:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$14979",
                    "typeString": "contract Vm"
                  }
                },
                "id": 44878,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "526:4:31",
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 13344,
                "src": "523:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 44880,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "523:16:31",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44887,
            "nodeType": "VariableDeclaration",
            "src": "545:37:31",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "562:3:31",
            "scope": 44984,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44882,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "545:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 44885,
                  "name": "bobPk",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 44866,
                  "src": "576:5:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "expression": {
                  "id": 44883,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3408,
                  "src": "568:2:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$14979",
                    "typeString": "contract Vm"
                  }
                },
                "id": 44884,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "571:4:31",
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 13344,
                "src": "568:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 44886,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "568:14:31",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44893,
            "nodeType": "VariableDeclaration",
            "src": "588:37:31",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "dao",
            "nameLocation": "605:3:31",
            "scope": 44984,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44888,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "588:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 44891,
                  "name": "daoPk",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 44869,
                  "src": "619:5:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "expression": {
                  "id": 44889,
                  "name": "vm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3408,
                  "src": "611:2:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$14979",
                    "typeString": "contract Vm"
                  }
                },
                "id": 44890,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "614:4:31",
                "memberName": "addr",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 13344,
                "src": "611:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                  "typeString": "function (uint256) pure external returns (address)"
                }
              },
              "id": 44892,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "611:14:31",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44896,
            "nodeType": "VariableDeclaration",
            "src": "633:18:31",
            "nodes": [],
            "constant": false,
            "functionSelector": "3e413bee",
            "mutability": "mutable",
            "name": "usdc",
            "nameLocation": "647:4:31",
            "scope": 44984,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$707",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 44895,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44894,
                "name": "IERC20",
                "nameLocations": [
                  "633:6:31"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 707,
                "src": "633:6:31"
              },
              "referencedDeclaration": 707,
              "src": "633:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$707",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44899,
            "nodeType": "VariableDeclaration",
            "src": "657:20:31",
            "nodes": [],
            "constant": false,
            "functionSelector": "4aa07e64",
            "mutability": "mutable",
            "name": "wstETH",
            "nameLocation": "671:6:31",
            "scope": 44984,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$707",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 44898,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44897,
                "name": "IERC20",
                "nameLocations": [
                  "657:6:31"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 707,
                "src": "657:6:31"
              },
              "referencedDeclaration": 707,
              "src": "657:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$707",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44902,
            "nodeType": "VariableDeclaration",
            "src": "683:20:31",
            "nodes": [],
            "constant": false,
            "functionSelector": "9bec8288",
            "mutability": "mutable",
            "name": "crvUSD",
            "nameLocation": "697:6:31",
            "scope": 44984,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$707",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 44901,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44900,
                "name": "IERC20",
                "nameLocations": [
                  "683:6:31"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 707,
                "src": "683:6:31"
              },
              "referencedDeclaration": 707,
              "src": "683:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$707",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44904,
            "nodeType": "VariableDeclaration",
            "src": "709:31:31",
            "nodes": [],
            "constant": false,
            "functionSelector": "236f6f42",
            "mutability": "mutable",
            "name": "crvUSDController",
            "nameLocation": "724:16:31",
            "scope": 44984,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44903,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "709:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44912,
            "nodeType": "FunctionDefinition",
            "src": "749:56:31",
            "nodes": [],
            "body": {
              "id": 44911,
              "nodeType": "Block",
              "src": "773:32:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44907,
                      "name": "testNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44857,
                      "src": "783:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3432",
                      "id": 44908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "796:2:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_42_by_1",
                        "typeString": "int_const 42"
                      },
                      "value": "42"
                    },
                    "src": "783:15:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44910,
                  "nodeType": "ExpressionStatement",
                  "src": "783:15:31"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "758:5:31",
            "parameters": {
              "id": 44905,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "763:2:31"
            },
            "returnParameters": {
              "id": 44906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "773:0:31"
            },
            "scope": 44984,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44966,
            "nodeType": "FunctionDefinition",
            "src": "811:414:31",
            "nodes": [],
            "body": {
              "id": 44965,
              "nodeType": "Block",
              "src": "848:377:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44918,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44875,
                        "src": "872:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 44915,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3408,
                        "src": "858:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14979",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "861:10:31",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14645,
                      "src": "858:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 44919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "858:20:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44920,
                  "nodeType": "ExpressionStatement",
                  "src": "858:20:31"
                },
                {
                  "expression": {
                    "id": 44930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44921,
                      "name": "levStrat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44855,
                      "src": "888:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LeverageStrategy_$502",
                        "typeString": "contract LeverageStrategy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 44927,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44893,
                              "src": "928:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 44926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "920:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44925,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "920:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "920:12:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "899:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_LeverageStrategy_$502_$",
                          "typeString": "function (address) returns (contract LeverageStrategy)"
                        },
                        "typeName": {
                          "id": 44923,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44922,
                            "name": "LeverageStrategy",
                            "nameLocations": [
                              "903:16:31"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 502,
                            "src": "903:16:31"
                          },
                          "referencedDeclaration": 502,
                          "src": "903:16:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LeverageStrategy_$502",
                            "typeString": "contract LeverageStrategy"
                          }
                        }
                      },
                      "id": 44929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "899:34:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LeverageStrategy_$502",
                        "typeString": "contract LeverageStrategy"
                      }
                    },
                    "src": "888:45:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LeverageStrategy_$502",
                      "typeString": "contract LeverageStrategy"
                    }
                  },
                  "id": 44931,
                  "nodeType": "ExpressionStatement",
                  "src": "888:45:31"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 44932,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3408,
                        "src": "943:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14979",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "946:9:31",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14662,
                      "src": "943:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 44935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "943:14:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44936,
                  "nodeType": "ExpressionStatement",
                  "src": "943:14:31"
                },
                {
                  "expression": {
                    "id": 44941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44937,
                      "name": "wstETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44899,
                      "src": "968:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$707",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307837663339433538314635393542353363356362313962443062336638644136633933354532436130",
                          "id": 44939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "984:42:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44938,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "977:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$707_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 44940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "977:50:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$707",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "968:59:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$707",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 44942,
                  "nodeType": "ExpressionStatement",
                  "src": "968:59:31"
                },
                {
                  "expression": {
                    "id": 44947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44943,
                      "name": "usdc",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44896,
                      "src": "1037:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$707",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
                          "id": 44945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1051:42:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44944,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "1044:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$707_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 44946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1044:50:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$707",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1037:57:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$707",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 44948,
                  "nodeType": "ExpressionStatement",
                  "src": "1037:57:31"
                },
                {
                  "expression": {
                    "id": 44953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44949,
                      "name": "crvUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44902,
                      "src": "1104:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$707",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307866393339453041303346423037463539413733333134453733373934426530453537616331623445",
                          "id": 44951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1120:42:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44950,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "1113:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$707_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 44952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1113:50:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$707",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1104:59:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$707",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 44954,
                  "nodeType": "ExpressionStatement",
                  "src": "1104:59:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44960,
                            "name": "levStrat",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44855,
                            "src": "1192:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LeverageStrategy_$502",
                              "typeString": "contract LeverageStrategy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LeverageStrategy_$502",
                              "typeString": "contract LeverageStrategy"
                            }
                          ],
                          "id": 44959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1184:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44958,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1184:7:31",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1184:17:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4c65765374726174656779",
                        "id": 44962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1203:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a92e912658a313a28dfea250f9de465c4914554848220e9fe391c4958707bb6",
                          "typeString": "literal_string \"LevStrategy\""
                        },
                        "value": "LevStrategy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a92e912658a313a28dfea250f9de465c4914554848220e9fe391c4958707bb6",
                          "typeString": "literal_string \"LevStrategy\""
                        }
                      ],
                      "expression": {
                        "id": 44955,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3408,
                        "src": "1175:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14979",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1178:5:31",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13985,
                      "src": "1175:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 44963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1175:42:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44964,
                  "nodeType": "ExpressionStatement",
                  "src": "1175:42:31"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deployContracts",
            "nameLocation": "820:16:31",
            "parameters": {
              "id": 44913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "836:2:31"
            },
            "returnParameters": {
              "id": 44914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "848:0:31"
            },
            "scope": 44984,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44975,
            "nodeType": "FunctionDefinition",
            "src": "1231:75:31",
            "nodes": [],
            "body": {
              "id": 44974,
              "nodeType": "Block",
              "src": "1265:41:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44970,
                        "name": "testNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44857,
                        "src": "1284:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3432",
                        "id": 44971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1296:2:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        },
                        "value": "42"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_42_by_1",
                          "typeString": "int_const 42"
                        }
                      ],
                      "id": 44969,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3543,
                        3568,
                        3581,
                        3597,
                        3639,
                        3681,
                        3723,
                        3760,
                        3797,
                        3834,
                        1378,
                        1403,
                        1433,
                        1458,
                        1517,
                        1542,
                        1572,
                        1597,
                        3070,
                        3105
                      ],
                      "referencedDeclaration": 1572,
                      "src": "1275:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 44972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1275:24:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44973,
                  "nodeType": "ExpressionStatement",
                  "src": "1275:24:31"
                }
              ]
            },
            "functionSelector": "876db121",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_NumberIs42",
            "nameLocation": "1240:15:31",
            "parameters": {
              "id": 44967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:31"
            },
            "returnParameters": {
              "id": 44968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1265:0:31"
            },
            "scope": 44984,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44983,
            "nodeType": "FunctionDefinition",
            "src": "1312:71:31",
            "nodes": [],
            "body": {
              "id": 44982,
              "nodeType": "Block",
              "src": "1350:33:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44978,
                      "name": "testNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44857,
                      "src": "1360:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "3433",
                      "id": 44979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1374:2:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_43_by_1",
                        "typeString": "int_const 43"
                      },
                      "value": "43"
                    },
                    "src": "1360:16:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44981,
                  "nodeType": "ExpressionStatement",
                  "src": "1360:16:31"
                }
              ]
            },
            "functionSelector": "a048c7bc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFail_Subtract43",
            "nameLocation": "1321:19:31",
            "parameters": {
              "id": 44976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1340:2:31"
            },
            "returnParameters": {
              "id": 44977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1350:0:31"
            },
            "scope": 44984,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44851,
              "name": "Test",
              "nameLocations": [
                "225:4:31"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13273,
              "src": "225:4:31"
            },
            "id": 44852,
            "nodeType": "InheritanceSpecifier",
            "src": "225:4:31"
          }
        ],
        "canonicalName": "BaseLeverageStrategyTest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44984,
          13273,
          13222,
          8758,
          8433,
          7640,
          5580,
          4842,
          3349,
          3415,
          3412
        ],
        "name": "BaseLeverageStrategyTest",
        "nameLocation": "197:24:31",
        "scope": 44985,
        "usedErrors": [],
        "usedEvents": [
          1063,
          1067,
          1071,
          1075,
          1079,
          1083,
          1087,
          1091,
          1097,
          1103,
          1111,
          1119,
          1125,
          1131,
          1137,
          1143,
          3437,
          3442,
          3447,
          3454,
          3461,
          3468
        ]
      }
    ]
  },
  "id": 31
}